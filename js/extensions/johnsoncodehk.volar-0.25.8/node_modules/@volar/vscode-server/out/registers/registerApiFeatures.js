"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.register = void 0;
const vscode_vue_languageservice_1 = require("vscode-vue-languageservice");
const node_1 = require("vscode-languageserver/node");
const shared_1 = require("../features/shared");
function register(connection, enabledTsPlugin) {
    connection.client.register(node_1.ReferencesRequest.type, enabledTsPlugin ? shared_1.vueFileReg : shared_1.allFilesReg);
    connection.client.register(node_1.DefinitionRequest.type, shared_1.vueFileReg);
    connection.client.register(node_1.CallHierarchyPrepareRequest.type, shared_1.allFilesReg); // TODO: vueFileReg
    connection.client.register(node_1.TypeDefinitionRequest.type, shared_1.vueFileReg);
    connection.client.register(node_1.HoverRequest.type, shared_1.vueFileReg);
    connection.client.register(node_1.RenameRequest.type, {
        documentSelector: shared_1.vueFileReg.documentSelector,
        prepareProvider: true,
    });
    connection.client.register(node_1.SelectionRangeRequest.type, shared_1.vueFileReg);
    connection.client.register(node_1.SignatureHelpRequest.type, {
        documentSelector: shared_1.vueFileReg.documentSelector,
        triggerCharacters: ['(', ',', '<'],
        retriggerCharacters: [')'],
    });
    connection.client.register(node_1.ExecuteCommandRequest.type, {
        commands: [
            vscode_vue_languageservice_1.Commands.HTML_TO_PUG,
            vscode_vue_languageservice_1.Commands.PUG_TO_HTML,
            vscode_vue_languageservice_1.Commands.SWITCH_REF_SUGAR,
            vscode_vue_languageservice_1.Commands.SHOW_REFERENCES,
            vscode_vue_languageservice_1.Commands.CONVERT_TO_KEBAB_CASE,
            vscode_vue_languageservice_1.Commands.CONVERT_TO_PASCAL_CASE,
        ]
    });
    connection.client.register(node_1.CompletionRequest.type, {
        documentSelector: shared_1.vueFileReg.documentSelector,
        triggerCharacters: [
            ...vscode_vue_languageservice_1.triggerCharacter.typescript,
            ...vscode_vue_languageservice_1.triggerCharacter.html,
            ...vscode_vue_languageservice_1.triggerCharacter.css,
            ...vscode_vue_languageservice_1.triggerCharacter.json,
        ],
        resolveProvider: true,
    });
}
exports.register = register;
//# sourceMappingURL=registerApiFeatures.js.map