"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SemanticTokensChangedNotification = exports.SemanticTokenLegendRequest = exports.RangeSemanticTokensRequest = exports.GetClientTarNameCaseRequest = exports.GetClientAttrNameCaseRequest = exports.GetServerNameCasesRequest = exports.ShowReferencesNotification = exports.RestartServerNotification = exports.WriteVirtualFilesRequest = exports.VerifyAllScriptsRequest = exports.ActiveSelectionRequest = exports.DocumentVersionRequest = exports.RefCloseRequest = exports.TagCloseRequest = exports.D3Request = exports.PingRequest = void 0;
const node_1 = require("vscode-languageserver/node");
var PingRequest;
(function (PingRequest) {
    PingRequest.type = new node_1.RequestType0('volar/ping');
})(PingRequest = exports.PingRequest || (exports.PingRequest = {}));
var D3Request;
(function (D3Request) {
    D3Request.type = new node_1.RequestType('volar/d3');
})(D3Request = exports.D3Request || (exports.D3Request = {}));
var TagCloseRequest;
(function (TagCloseRequest) {
    TagCloseRequest.type = new node_1.RequestType('html/tag');
})(TagCloseRequest = exports.TagCloseRequest || (exports.TagCloseRequest = {}));
var RefCloseRequest;
(function (RefCloseRequest) {
    RefCloseRequest.type = new node_1.RequestType('volar/ref');
})(RefCloseRequest = exports.RefCloseRequest || (exports.RefCloseRequest = {}));
var DocumentVersionRequest;
(function (DocumentVersionRequest) {
    DocumentVersionRequest.type = new node_1.RequestType('vue/docUpdated');
})(DocumentVersionRequest = exports.DocumentVersionRequest || (exports.DocumentVersionRequest = {}));
var ActiveSelectionRequest;
(function (ActiveSelectionRequest) {
    ActiveSelectionRequest.type = new node_1.RequestType0('vue/activeSelection');
})(ActiveSelectionRequest = exports.ActiveSelectionRequest || (exports.ActiveSelectionRequest = {}));
var VerifyAllScriptsRequest;
(function (VerifyAllScriptsRequest) {
    VerifyAllScriptsRequest.type = new node_1.RequestType('volar.action.verifyAllScripts');
})(VerifyAllScriptsRequest = exports.VerifyAllScriptsRequest || (exports.VerifyAllScriptsRequest = {}));
var WriteVirtualFilesRequest;
(function (WriteVirtualFilesRequest) {
    WriteVirtualFilesRequest.type = new node_1.RequestType('volar.action.writeVirtualFiles');
})(WriteVirtualFilesRequest = exports.WriteVirtualFilesRequest || (exports.WriteVirtualFilesRequest = {}));
var RestartServerNotification;
(function (RestartServerNotification) {
    RestartServerNotification.type = new node_1.NotificationType('volar.action.restartServer');
})(RestartServerNotification = exports.RestartServerNotification || (exports.RestartServerNotification = {}));
var ShowReferencesNotification;
(function (ShowReferencesNotification) {
    ShowReferencesNotification.type = new node_1.NotificationType('vue.findReferences');
})(ShowReferencesNotification = exports.ShowReferencesNotification || (exports.ShowReferencesNotification = {}));
var GetServerNameCasesRequest;
(function (GetServerNameCasesRequest) {
    GetServerNameCasesRequest.type = new node_1.RequestType('volar/getTagNameCaseServer');
})(GetServerNameCasesRequest = exports.GetServerNameCasesRequest || (exports.GetServerNameCasesRequest = {}));
var GetClientAttrNameCaseRequest;
(function (GetClientAttrNameCaseRequest) {
    GetClientAttrNameCaseRequest.type = new node_1.RequestType('volar/getAttrNameCaseClient');
})(GetClientAttrNameCaseRequest = exports.GetClientAttrNameCaseRequest || (exports.GetClientAttrNameCaseRequest = {}));
var GetClientTarNameCaseRequest;
(function (GetClientTarNameCaseRequest) {
    GetClientTarNameCaseRequest.type = new node_1.RequestType('volar/getTagNameCaseClient');
})(GetClientTarNameCaseRequest = exports.GetClientTarNameCaseRequest || (exports.GetClientTarNameCaseRequest = {}));
// semantic tokens
var RangeSemanticTokensRequest;
(function (RangeSemanticTokensRequest) {
    RangeSemanticTokensRequest.type = new node_1.RequestType('vue.semanticTokens');
})(RangeSemanticTokensRequest = exports.RangeSemanticTokensRequest || (exports.RangeSemanticTokensRequest = {}));
var SemanticTokenLegendRequest;
(function (SemanticTokenLegendRequest) {
    SemanticTokenLegendRequest.type = new node_1.RequestType0('vue.semanticTokenLegend');
})(SemanticTokenLegendRequest = exports.SemanticTokenLegendRequest || (exports.SemanticTokenLegendRequest = {}));
var SemanticTokensChangedNotification;
(function (SemanticTokensChangedNotification) {
    SemanticTokensChangedNotification.type = new node_1.NotificationType0('vue.semanticTokensChanged');
})(SemanticTokensChangedNotification = exports.SemanticTokensChangedNotification || (exports.SemanticTokensChangedNotification = {}));
//# sourceMappingURL=requests.js.map